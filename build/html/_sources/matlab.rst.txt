MATLAB入门教程
##################



内容概述
******************


* 通过本教程大家可以学会的：
	* MATLAB语法：一切操作的基础
	* 使用MATLAB编写程序：函数和m文件的定义
	* MATLAB绘图操作：图像的生成、格式修改和导出
	* MATLAB进一步学习的方向：专业工具箱的使用、使用并行计算和矩阵计算提高效率

*  本教程没有涉及的：
	*  这是一个MATLAB的编程教程，仅涉及语法，不涉及算法，大家可以自行尝试使用MATLAB实现简单的算法，可以从最简单的排序、动态规划、贪心、最短路算法等入手。也可以从科研或学习实际入手，实践是提高编程水平的最高效途径。

	*  本教程不涉及各类专业工具箱的介绍和使用指南。 MATLAB是一个很全面的软件，涉及机械控制、图像处理、工程、物理学、化学、金融等多个领域，每个领域又有专业的工具箱，在掌握了基础的操作以后，各学科的同学可以根据需要深入了解专业工具箱的作用，这个内容已经远远超出了本次入门教程的范围。

	*  本教程没有详细展开MATLAB中的面向对象编程。 面向对象编程是组织大型代码的常用方法，MATLAB在2008a以后也开始支持面向对象编程，面向对象编程是一种正式的编程方法，它将数据和相关操作（方法）合并到逻辑结构（对象）中。该方法可提升管理软件复杂性的能力——在开发和维护大型应用与数据结构时尤为重要。对于想要使用MATLAB进行数值分析和是可视化的同学来说，数据往往是简单的，此时面向对象编程的优势不太明显。但是，如果我们想要使用MATLAB开发大规模的计算程序，例如一整套实验数据的处理程序，面向对象可能是你需要继续深入学习的知识





MATLAB简介
******************
MATLAB是Matrix&Laboratory两个词的组合，意为矩阵工厂（矩阵实验室）。是由美国Mathworks公司发布的主要面对科学计算、可视化以及交互式程序设计的高科技计算环境。

MATLAB和Mathematica、Maple并称为三大数学软件。它在数学类科技应用软件中在数值计算方面首屈一指。MATLAB可以进行矩阵运算、绘制函数和数据、实现算法、创建用户界面、连接其他编程语言的程序等，在工程计算、控制设计、信号处理与通讯、图像处理、信号检测、金融建模设计与分析等领域有广泛应用。

.. image:: images/matlab_logo.png


MATLAB功能
++++++++++++++
#. 数值计算和符号计算功能
	* MATLAB以矩阵作为数据操作的基本单位，还提供了十分丰富的数值计算函数。
	* MATLAB和著名的符号计算语言Maple相结合，使得MATLAB具有符号计算功能。


#. 绘图功能
    * MATLAB提供了两个层次的绘图操作：一种是对图形句柄进行的低层绘图，另一种是建立在低层绘图操作之上的高层绘图操作。
#. 编程语言
    * MATLAB具有程序结构控制、函数调用、数据结构、输入输出、面向对象等程序语言特征，而且简单易学、编程效率高。
#. MATLAB工具箱
    * MATLAB包含两部分内容：基本部分和各种可选的工具箱。
    * MATLAB工具箱分为两大类：功能性工具箱和学科性工具箱。



\ **MATLAB是一个数值计算的工具软件，不是一门编程语言。大多数用MATLAB的人不是真正的程序员，而且不想成为（他们只关注数值计算）。**\ 



MATLAB的安装
******************





基本数据类型和操作
******************

在matlab中提供了多种数据类型，包括浮点型和整形、字符和字符串、逻辑（True/False）表达式、函数句柄、结构数组、元胞数组、map容器、日期和时间、分类数组、表格和时间序列等等。这里我们对其中重要的几个展开解释。

数值型
++++++++
MATLAB中的数值包括有符号和无符号整数，单精度和双精度浮点数。默认情况下，matlab使用双精度浮点数存储数据。数值型数组或矩阵构造比较简单，这里简要概述如下：


数的四则运算和赋值语句

::

	a = 1




::

	b = 2  * 3

::

	c = a + b - 1


::

	d = a / b

::

	sin(a^(1/2))



已经赋值的数据都可以在工作区（workspace）查看，如果不给定赋值对象，则系统会默认将计算结果赋值给“ans”变量，后续的计算会覆盖之前的结果（类似计算器的功能）


通过在命令行按“↑”“↓”箭头可以重复之前输入过的命令。


::

	e = sin(a);


通过添加分号可以省略命令行的输出


向量的生成
+++++++++++++

行向量：写在英文中括号[]内，数字间用“，”或者空格隔开


:: 

	a = [1 2 3 4]

列向量：写在英文中括号[]内，数字间用“；” 隔开


::

	b = [1 ; 2 ; 3 ; 4]



有规律的数组可以利用“：”辅助输入，需要指定开始数字，结束数字和步长


::

	a = 1:2:10    %从1开始，到10结束，步长为2（步长可以省略，缺省值为1）




两个常用命令：
* clc：  clears the Command Window，清空命令窗口
* clear： 清空工作空间（储存的所有数据） 


矩阵的生成
+++++++++++
写在英文中括号[]内，数字间用“，”或者空格隔开，行与行之间用“；”隔开

::

	a = [1 2 3; 4 5 6; 7 8 10]

利用矩阵生成函数：

::
	
	z = zeros(2,3)%其中第一个参数为行数，第二个参数为列数


类似的，还有ones，rand函数。


还可以利用已定义向量合并成为矩阵

::

	a = [1 2 3];
	b = [4 5 6];
	c = [a,b]


矩阵索引


