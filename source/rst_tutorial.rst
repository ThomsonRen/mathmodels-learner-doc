rst基础
############



简介
************

#. 本文试图说明如何使用最简单的 reStructuredText 标记语法写一篇文章，适用于完全没有 reStructuredText 语法经验的人。如果你稍有一些 Markdown 或 HTML 之类的经验，理解起来会更快。

#. 与其他标记语法相比，reStructuredText 是个完善且优雅的标记语法，网上有完整的文档和教程，也囿于功能强大以至内容稍多，可能阻碍了初学者快速上手，所以我摘选了撰写一篇文章最最基础的部分做教程，试图减轻初学者的记忆负担。

#. 如果你有比较高的写作需求，可以继续探索一些更高级的用法，会让你的写作效率更高，原始文本更美观。

#. 即便你看到这里就已励志成为 reStructuredText 高手，我也推荐你从这篇入门指南开始，直接看官方文档实在是太长了......

#. 有时你会看到 reStructuredText 被缩写为 reST 或 rst。


概念
********
首先明确 reStructuredText 里的几个基本知识点（为了便于理解，不严谨）：

* 标记元素分两种：指令（Directives）和角色（Role），指令是块级元素，像段落一样使用。角色是行内元素，可以写在普通文本之中。
* 指令和它要包含的内容之间需要一个空行。
* 空行、空格和缩进都是有意义的，你在其他语法中可能会遇到自动清除缩进的情况，但在 reStructuredText 里是讲究对齐缩进的。
* 每级缩进推荐用 4 个空格，你可以把你的编辑器设置为 Tab 自动转为 4 个空格。
* 块级元素可以用缩进来嵌套，除了标题（标题是一种特殊的块级元素，不能放在缩进的文本中）。


标题
*******

* 一级标题在文本的第二行使用 # 来标记，就像手打下划线一样。
* 二、三、四、五、六级标题分别使用 * + = : -，通常记住 # * + 就够了。
* 标题递进必须按顺序，不能一级标题后紧跟三级标题，否则会渲染失败。
* 原则上这个手打的“下划线”的长度至少跟标题文字一样长，可以超长。



段落
********

普通的文本段落之间，还有块级元素之间，必须使用一个空行加以区分，否则会被 reStructuredText 折叠到上一行。

列表
********

* 星号开头的是无序列表，会渲染为一个圆点。
* 同级列表项之间可以空行，不会打断。
* 但如果你换了一个符号，列表就被打断了。（有时候受样式影响视觉上看不出来。）
* 星号、加号、减号都可以标记无序列表。

#. 使用“井号英文句点空格”开头的会被渲染为有序列表，前面带数字，数字自动递增。
#. 空行不会打断序号。
#. 你可能想在列表里嵌套列表。
	#. 这时候子列表要和上级列表挨着，不要空行。
	#. 同级列表之间是可以空行的。

超链接
*******

网址超链接
++++++++++++

你可以直接粘贴网址，两端用空格和文本隔开，reStructuredText 会自动把网址转成超链接，像这样 http://www.bary.com/ ，注意结束的地方要跟空格。

如果你希望网址和文本之间没有空格，可以用转义符号反斜杠 \ 把空格消掉，由于反斜杠是转义符号，所以如果你想在文中显示它，需要打两个反斜杠，也就是用反斜杠转义一个反斜杠。像这样\ http://www.bary.com/\ 。

锚文本超链接
+++++++++++++
有时你需要用锚文本来显示一个链接，需要用到反引号（键盘数字 1 左边那个键）、尖括号、下划线、空格。

例子：\ `Bary.com <http://www.bary.com>`_


用尖括号包裹网址，放在文本后面（注意隔一个空格），用一对反引号包裹它们，切记结尾跟一个下划线。


在这里，反引号就是引号，它包裹住你想转换的内容，下划线是转换成链接的意思，\
reStructuredText 中有很多种链接，都是用下划线结尾的。


页内锚文本
++++++++++++++
你可以看到每一级标题都会变成一个“锚”，也就是你可以创建一个跳转此位置的链接。比如我创建一个锚文本直接跳转到 超链接_ 这个标题下。由于超链接这三个字中没有空格，直接跟一个 _ 会转换“超链接”这三个字为链接，并搜索本文内的标题，指向它。

前面的例子没有用反引号，是因为“超链接”这三个字之间没有空格，如果你某一个标题是带空格的，那么就需要用反引号括起来。当然我推荐你任何时候都使用反引号，记忆负担小。

所以最佳实践是\ `超链接`_\ 这样使用。


中场休息
******************
现在你会看到，标题、段落、列表是块级元素，自成一级，超链接是行内元素，它可以放到其它元素的行内。

注意这个概念，下文的代码和图片部分都会用到。


代码
******************
插播代码块，因为下面要写指令（Directives）了。

行内代码
++++++++++++
在行内显示一段代码，要用四个反引号括起来，当然两端还要有空格。

看起来像 ``import numpy`` 这样。


原始文本块
++++++++++++++
使用两个连续的英文引号:: 来标记一个原始文本块，之后跟空行，内容要缩进，再以空行结束。看起来像这样：

::

    原始文本块内的任何标记都不会被转换，随便写。

    `Bary.com <http://www.bary.com/>`_

    这还会显示在原始文本块中。

        缩进都会原样显示出来。

        只要最后有空行，缩进退回到 :: 的位置，就表示退出了\ `原始文本块`_。

块级代码
++++++++++++++++++++++++++++
任何代码都可以使用原始文本块，它不会转换内部的字符，

但有时候我们需要写一些源代码，希望它能高亮显示，这就需要用“块级代码”。

.. code:: php

    <?php
        if(1 == 1){
            $joke = "Life is short, not int.";
        }
    ?>

你会看到：

它的形式是“句点句点空格code冒号冒号空格”后跟语言名，如果不跟语言名，.. code:: 和 :: 基本是一样的。


只要配置了 CSS 或 Javascript 渲染，加了语言名就会有漂亮的颜色出来，支持很多种语言的高亮，甚至配置语法、模板。

这里有个支持列表可以看: `Pygments Supported Languages <https://pygments.org/languages/>`_ 


斜体和加粗
****************
会用了\ 超链接_、行内代码_，斜体和加粗就很简单了，*斜体* 就是用星号括起来，**加粗** 是两个星号。

引用
****************
多数时候，引用一段纯文本，可以直接使用 ``::`` 这种方式，但如果你想在引用里也使用
reStructuredText 的语法标记，那你就删掉 ``::`` 就可以了，仅仅缩进。而且引用总是\
自动换行，``::`` 则是根据样式控制换行。


	需要\ **特别强调**\ 的是，“引用”里不能含有标题。


图片
***********
图片是块级元素，不能嵌入行内。（想用行内图片，比如表情，请查看高级教程。）

图片要自成段落,跟 ``.. code::`` 很像，只是图片在指令后面跟图片地址。

.. image:: /images/matlab_logo.png

表格
***********

纯文本手打表格很麻烦，手画表格除了 Emacs 我没用过更好文本编辑器，可这个编辑器又比较难学。reStructuredText 中有好几种表格的实现方法，本文只介绍灵活性和简洁性适中的一种。


列表表格
++++++++++++


列表表格是通过创建一组嵌套的列表来渲染成表格。

父级列表是行，每一行的子列表是列，每行的列数必须一致（不支持合并单元格），看例子：

.. list-table::

    * - 1
      - 2
      - 3
      - 4
    * - 5
      - 6
      - 7
      - 8
    * -
      -
      - 9
      -

一些推荐
**********
如果你已经看到这里了，大概你愿意继续深造：

* 官方文档的 reStructuredText 语法部分：\ `reStructuredText Markup Specification <https://docutils.sourceforge.io/docs/ref/rst/restructuredtext.html>`_


结语
********


本文内容来自\ `白杉 <http://www.bary.com/doc/a/228277572381775842/#33246dda>`_







